var JSON;

if (!JSON) {
    JSON = {};
}

(function() {
    "use strict";
    function f(e) {
        return e < 10 ? "0" + e : e;
    }
    if (typeof Date.prototype.toJSON !== "function") {
        Date.prototype.toJSON = function(e) {
            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null;
        };
        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function(e) {
            return this.valueOf();
        };
    }
    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {
        "\b": "\\b",
        "	": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        '"': '\\"',
        "\\": "\\\\"
    }, rep;
    function quote(e) {
        escapable.lastIndex = 0;
        return escapable.test(e) ? '"' + e.replace(escapable, function(e) {
            var t = meta[e];
            return typeof t === "string" ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4);
        }) + '"' : '"' + e + '"';
    }
    function str(e, t) {
        var n, r, i, a, o = gap, f, s = t[e];
        if (s && typeof s === "object" && typeof s.toJSON === "function") {
            s = s.toJSON(e);
        }
        if (typeof rep === "function") {
            s = rep.call(t, e, s);
        }
        switch (typeof s) {
          case "string":
            return quote(s);

          case "number":
            return isFinite(s) ? String(s) : "null";

          case "boolean":
          case "null":
            return String(s);

          case "object":
            if (!s) {
                return "null";
            }
            gap += indent;
            f = [];
            if (Object.prototype.toString.apply(s) === "[object Array]") {
                a = s.length;
                for (n = 0; n < a; n += 1) {
                    f[n] = str(n, s) || "null";
                }
                i = f.length === 0 ? "[]" : gap ? "[\n" + gap + f.join(",\n" + gap) + "\n" + o + "]" : "[" + f.join(",") + "]";
                gap = o;
                return i;
            }
            if (rep && typeof rep === "object") {
                a = rep.length;
                for (n = 0; n < a; n += 1) {
                    if (typeof rep[n] === "string") {
                        r = rep[n];
                        i = str(r, s);
                        if (i) {
                            f.push(quote(r) + (gap ? ": " : ":") + i);
                        }
                    }
                }
            } else {
                for (r in s) {
                    if (Object.prototype.hasOwnProperty.call(s, r)) {
                        i = str(r, s);
                        if (i) {
                            f.push(quote(r) + (gap ? ": " : ":") + i);
                        }
                    }
                }
            }
            i = f.length === 0 ? "{}" : gap ? "{\n" + gap + f.join(",\n" + gap) + "\n" + o + "}" : "{" + f.join(",") + "}";
            gap = o;
            return i;
        }
    }
    if (typeof JSON.stringify !== "function") {
        JSON.stringify = function(e, t, n) {
            var r;
            gap = "";
            indent = "";
            if (typeof n === "number") {
                for (r = 0; r < n; r += 1) {
                    indent += " ";
                }
            } else if (typeof n === "string") {
                indent = n;
            }
            rep = t;
            if (t && typeof t !== "function" && (typeof t !== "object" || typeof t.length !== "number")) {
                throw new Error("JSON.stringify");
            }
            return str("", {
                "": e
            });
        };
    }
    if (typeof JSON.parse !== "function") {
        JSON.parse = function(text, reviver) {
            var j;
            function walk(e, t) {
                var n, r, i = e[t];
                if (i && typeof i === "object") {
                    for (n in i) {
                        if (Object.prototype.hasOwnProperty.call(i, n)) {
                            r = walk(i, n);
                            if (r !== undefined) {
                                i[n] = r;
                            } else {
                                delete i[n];
                            }
                        }
                    }
                }
                return reviver.call(e, t, i);
            }
            text = String(text);
            cx.lastIndex = 0;
            if (cx.test(text)) {
                text = text.replace(cx, function(e) {
                    return "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4);
                });
            }
            if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                j = eval("(" + text + ")");
                return typeof reviver === "function" ? walk({
                    "": j
                }, "") : j;
            }
            throw new SyntaxError("JSON.parse");
        };
    }
})();

var g = function(e) {
    e.hasClassName = function(e, t) {
        return new RegExp("(?:^|\\s+)" + t + "(?:\\s+|$)").test(e.className);
    };
    e.addClassName = function(e, t) {
        if (!g.hasClassName(e, t)) {
            e.className = e.className ? [ e.className, t ].join(" ") : t;
        }
    };
    e.removeClassName = function(e, t) {
        if (g.hasClassName(e, t)) {
            var n = e.className;
            e.className = n.replace(new RegExp("(?:^|\\s+)" + t + "(?:\\s+|$)", "g"), "");
        }
    };
    e.removeElementById = function(e) {
        var t = document.getElementById(e);
        if (typeof t != "undefined") {
            t.parentNode.removeChild(t);
        }
    };
    return e;
}(g || {});

function AJAX(e, t, n) {
    var r;
    var i = this;
    this.url = e;
    this.params = null;
    this.returnHandler = n;
    this.send = function() {
        var e = null;
        if (window.XMLHttpRequest) {
            e = new XMLHttpRequest();
        } else if (window.ActiveXObject) {
            e = new ActiveXObject("Microsoft.XMLHTTP");
        }
        if (e == null) return false;
        e.open("POST", this.url, true);
        if (typeof this.params != "undefined") {
            e.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        }
        e.onreadystatechange = function() {
            switch (e.readyState) {
              case 0:
                break;

              case 1:
                break;

              case 2:
                break;

              case 3:
                break;

              case 4:
                if (typeof i.returnHandler != "undefined") {
                    i.returnHandler(e);
                }
                break;

              default:
                break;
            }
        };
        e.send(this.params);
    };
    if (typeof t != "undefined") {
        r = Array();
        this.params = "";
        for (var a in t) {
            r.push(a + "=" + t[a]);
        }
        this.params = r.join("&");
    }
}

function Modal(e, t) {
    var n;
    if (typeof t == "undefined") {
        n = false;
    } else if (_isButtons == true) {
        n = true;
    }
    var r = document.createElement("DIV");
    var i = document.createElement("DIV");
    this.closeModal = function() {
        document.body.removeChild(r);
    };
    r.setAttribute("id", "divModalBG");
    r.style.position = "absolute";
    r.style.top = "0px";
    r.style.left = "0px";
    r.style.height = "100%";
    r.style.width = "100%";
    r.style.zIndex = "1000000";
    r.style.backgroundColor = "rgba(0,0,0,0.75)";
    i.setAttribute("id", "divModal");
    i.style.position = "absolute";
    i.style.width = "200px";
    i.style.height = "100px";
    i.style.padding = "10px";
    i.style.left = "50%";
    i.style.top = "50%";
    i.style.marginLeft = "-100px";
    i.style.marginTop = "-50px";
    i.style.background = "#FFF";
    i.innerHTML = e;
    r.appendChild(i);
    document.body.insertBefore(r, document.body.firstChild);
}