var JSON;

if (!JSON) {
    JSON = {};
}

(function() {
    "use strict";
    function f(a) {
        return a < 10 ? "0" + a : a;
    }
    if (typeof Date.prototype.toJSON !== "function") {
        Date.prototype.toJSON = function(a) {
            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null;
        };
        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function(a) {
            return this.valueOf();
        };
    }
    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {
        "\b": "\\b",
        "	": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        '"': '\\"',
        "\\": "\\\\"
    }, rep;
    function quote(a) {
        escapable.lastIndex = 0;
        return escapable.test(a) ? '"' + a.replace(escapable, function(a) {
            var b = meta[a];
            return typeof b === "string" ? b : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
        }) + '"' : '"' + a + '"';
    }
    function str(a, b) {
        var c, d, e, f, g = gap, h, i = b[a];
        if (i && typeof i === "object" && typeof i.toJSON === "function") {
            i = i.toJSON(a);
        }
        if (typeof rep === "function") {
            i = rep.call(b, a, i);
        }
        switch (typeof i) {
          case "string":
            return quote(i);

          case "number":
            return isFinite(i) ? String(i) : "null";

          case "boolean":
          case "null":
            return String(i);

          case "object":
            if (!i) {
                return "null";
            }
            gap += indent;
            h = [];
            if (Object.prototype.toString.apply(i) === "[object Array]") {
                f = i.length;
                for (c = 0; c < f; c += 1) {
                    h[c] = str(c, i) || "null";
                }
                e = h.length === 0 ? "[]" : gap ? "[\n" + gap + h.join(",\n" + gap) + "\n" + g + "]" : "[" + h.join(",") + "]";
                gap = g;
                return e;
            }
            if (rep && typeof rep === "object") {
                f = rep.length;
                for (c = 0; c < f; c += 1) {
                    if (typeof rep[c] === "string") {
                        d = rep[c];
                        e = str(d, i);
                        if (e) {
                            h.push(quote(d) + (gap ? ": " : ":") + e);
                        }
                    }
                }
            } else {
                for (d in i) {
                    if (Object.prototype.hasOwnProperty.call(i, d)) {
                        e = str(d, i);
                        if (e) {
                            h.push(quote(d) + (gap ? ": " : ":") + e);
                        }
                    }
                }
            }
            e = h.length === 0 ? "{}" : gap ? "{\n" + gap + h.join(",\n" + gap) + "\n" + g + "}" : "{" + h.join(",") + "}";
            gap = g;
            return e;
        }
    }
    if (typeof JSON.stringify !== "function") {
        JSON.stringify = function(a, b, c) {
            var d;
            gap = "";
            indent = "";
            if (typeof c === "number") {
                for (d = 0; d < c; d += 1) {
                    indent += " ";
                }
            } else if (typeof c === "string") {
                indent = c;
            }
            rep = b;
            if (b && typeof b !== "function" && (typeof b !== "object" || typeof b.length !== "number")) {
                throw new Error("JSON.stringify");
            }
            return str("", {
                "": a
            });
        };
    }
    if (typeof JSON.parse !== "function") {
        JSON.parse = function(text, reviver) {
            var j;
            function walk(a, b) {
                var c, d, e = a[b];
                if (e && typeof e === "object") {
                    for (c in e) {
                        if (Object.prototype.hasOwnProperty.call(e, c)) {
                            d = walk(e, c);
                            if (d !== undefined) {
                                e[c] = d;
                            } else {
                                delete e[c];
                            }
                        }
                    }
                }
                return reviver.call(a, b, e);
            }
            text = String(text);
            cx.lastIndex = 0;
            if (cx.test(text)) {
                text = text.replace(cx, function(a) {
                    return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
                });
            }
            if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                j = eval("(" + text + ")");
                return typeof reviver === "function" ? walk({
                    "": j
                }, "") : j;
            }
            throw new SyntaxError("JSON.parse");
        };
    }
})();

var g = function(a) {
    a.hasClassName = function(a, b) {
        return new RegExp("(?:^|\\s+)" + b + "(?:\\s+|$)").test(a.className);
    };
    a.addClassName = function(a, b) {
        if (!g.hasClassName(a, b)) {
            a.className = a.className ? [ a.className, b ].join(" ") : b;
        }
    };
    a.removeClassName = function(a, b) {
        if (g.hasClassName(a, b)) {
            var c = a.className;
            a.className = c.replace(new RegExp("(?:^|\\s+)" + b + "(?:\\s+|$)", "g"), "");
        }
    };
    a.removeElementById = function(a) {
        var b = document.getElementById(a);
        if (typeof b != "undefined") {
            b.parentNode.removeChild(b);
        }
    };
    return a;
}(g || {});

function AJAX(a, b, c) {
    var d;
    var e = this;
    this.url = a;
    this.params = null;
    this.returnHandler = c;
    this.send = function() {
        var a = null;
        if (window.XMLHttpRequest) {
            a = new XMLHttpRequest();
        } else if (window.ActiveXObject) {
            a = new ActiveXObject("Microsoft.XMLHTTP");
        }
        if (a == null) return false;
        a.open("POST", this.url, true);
        if (typeof this.params != "undefined") {
            a.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        }
        a.onreadystatechange = function() {
            switch (a.readyState) {
              case 0:
                break;

              case 1:
                break;

              case 2:
                break;

              case 3:
                break;

              case 4:
                if (typeof e.returnHandler != "undefined") {
                    e.returnHandler(a);
                }
                break;

              default:
                break;
            }
        };
        a.send(this.params);
    };
    if (typeof b != "undefined") {
        d = Array();
        this.params = "";
        for (var f in b) {
            d.push(f + "=" + b[f]);
        }
        this.params = d.join("&");
    }
}

function Modal(a, b) {
    var c;
    if (typeof b == "undefined") {
        c = false;
    } else if (_isButtons == true) {
        c = true;
    }
    var d = document.createElement("DIV");
    var e = document.createElement("DIV");
    this.closeModal = function() {
        document.body.removeChild(d);
    };
    d.setAttribute("id", "divModalBG");
    d.style.position = "absolute";
    d.style.top = "0px";
    d.style.left = "0px";
    d.style.height = "100%";
    d.style.width = "100%";
    d.style.zIndex = "1000000";
    d.style.backgroundColor = "rgba(0,0,0,0.75)";
    e.setAttribute("id", "divModal");
    e.style.position = "absolute";
    e.style.width = "200px";
    e.style.height = "100px";
    e.style.padding = "10px";
    e.style.left = "50%";
    e.style.top = "50%";
    e.style.marginLeft = "-100px";
    e.style.marginTop = "-50px";
    e.style.background = "#FFF";
    e.innerHTML = a;
    d.appendChild(e);
    document.body.insertBefore(d, document.body.firstChild);
}